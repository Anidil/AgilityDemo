https://github.com/Anidil/AgilityDemo.git


chmod 400 devopscandidate_uswest1.pem
ssh -i devopscandidate_uswest1.pem ec2-user@ec2-54-219-151-54.us-west-1.compute.amazonaws.com

==============================================================================

[ec2-user@ip-172-31-15-197 ~]$ docker info
Containers: 0
 Running: 0
 Paused: 0
 Stopped: 0
Images: 0
Server Version: 17.12.1-ce
Storage Driver: overlay2
 Backing Filesystem: extfs
 Supports d_type: true
 Native Overlay Diff: true
Logging Driver: json-file
Cgroup Driver: cgroupfs
Plugins:
 Volume: local
 Network: bridge host macvlan null overlay
 Log: awslogs fluentd gcplogs gelf journald json-file logentries splunk syslog
Swarm: inactive
Runtimes: runc
Default Runtime: runc
Init Binary: docker-init
containerd version: 9b55aab90508bd389d7654c4baf173a981477d55
runc version: 9f9c96235cc97674e935002fc3d78361b696a69e
init version: 949e6fa
Security Options:
 seccomp
  Profile: default
Kernel Version: 4.14.33-51.34.amzn1.x86_64
Operating System: Amazon Linux AMI 2018.03
OSType: linux
Architecture: x86_64
CPUs: 1
Total Memory: 987.5MiB
Name: ip-172-31-15-197
ID: CRXV:AWX2:JOGE:XS6Z:BDYB:4TYY:O5WS:JYRS:A42S:CER5:5K2F:WXMD
Docker Root Dir: /var/lib/docker
Debug Mode (client): false
Debug Mode (server): false
Registry: https://index.docker.io/v1/
Labels:
Experimental: false
Insecure Registries:
 127.0.0.0/8
Live Restore Enabled: false




==========================================================

dockerfile
=========


FROM ubuntu:12.04

#install dependencies

RUN apt-get update -y
RUN apt-get install -y apache2

#install apache and write test message

RUN echo "Welcome to AGILITY DEMO" > /var/www/index.html

#Continue apache

RUN a2enmod rewrite
RUN chown -R www-data:www-data /var/www
ENV APACHE_RUN_USER www-data
ENV APACHE_RUN_GROUP www-data
ENV APACHE_LOG_DIR /var/log/apache2

EXPOSE 80
CMD ["/usr/sbin/apache2", "-D","FOREGROUND"]
-----------------------------------------------------------------------
docker build -t myvm .

docker images -filter references=myvm
 
docker run -p 80:80 myvm  ------>>> expose port 80 with port 80 of myvm


open 54.219.151.54 on browser   ===== created a container over docker, and I'm using docker to manage that container

[ec2-user@ip-172-31-15-197 ~]$ docker info
Containers: 1
 Running: 1
 Paused: 0
 Stopped: 0
Images: 11


==================
ECS CLI

New-Item ‘C:\Program Files\Amazon\ECSCLI’ -type directory
Invoke-WebRequest -OutFile ‘C:\Program Files\Amazon\ECSCLI\ecs-cli.exe’ https://s3.amazonaws.com/amazon-ecs-cli/ecs-cli-windows-amd64-latest.exe
 Get-FileHash ecs-cli.exe -Algorithm MD5

Invoke-WebRequest -OutFile md5.txt https://s3.amazonaws.com/amazon-ecs-cli/ecs-cli-windows-amd64-latest.md5
Get-Content md5.txt



